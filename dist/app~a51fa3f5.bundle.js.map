{"version":3,"file":"app~a51fa3f5.bundle.js","mappings":"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","sources":["webpack://restaurant-apps/./src/scripts/data/favorite-restaurant-idb.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/restodb-source.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["import { openDB } from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n  },\r\n});\r\n\r\nconst FavoriteRestaurantIdb = {\r\n  async getRestaurant(id) {\r\n    if (!id) {\r\n      return;\r\n    }\r\n\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n  },\r\n  async getAllRestaurants() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n  async putRestaurant(restaurant) {\r\n    if (!restaurant.hasOwnProperty('id')) {\r\n      return;\r\n    }\r\n\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\r\n  },\r\n  async deleteRestaurant(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n  },\r\n  async searchRestaurants(query) {\r\n    return (await this.getAllRestaurants()).filter((restaurant) => {\r\n      const loweredCaseRestaurantName = (restaurant.name || '-').toLowerCase();\r\n      const jammedRestaurantName = loweredCaseRestaurantName.replace(/\\s/g, '');\r\n      const loweredCaseQuery = query.toLowerCase();\r\n      const jammedQuery = loweredCaseQuery.replace(/\\s/g, '');\r\n      return jammedRestaurantName.indexOf(jammedQuery) !== -1;\r\n    });\r\n  },\r\n};\r\n\r\nexport default FavoriteRestaurantIdb;","import CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n  LIST: `${CONFIG.BASE_URL}list`,\r\n  REVIEW: `${CONFIG.BASE_URL}review`,\r\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\r\n};\r\n\r\nexport default API_ENDPOINT;","import API_ENDPOINT from '../globals/api-endpoint';\r\nimport CONFIG from '../globals/config';\r\n\r\nclass RestoDbSource{\r\n    static async list() {\r\n        const response = await fetch(API_ENDPOINT.LIST);\r\n        return response.json();\r\n    }\r\n\r\n    static async review(data) {\r\n        const response = await fetch(API_ENDPOINT.REVIEW, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'X-Auth-Token': CONFIG.KEY,\r\n            },\r\n            body: data,\r\n          });\r\n          const responseJson = await response.json();\r\n          return responseJson;\r\n        }\r\n\r\n    static async detail(id) {\r\n        const response = await fetch(API_ENDPOINT.DETAIL(id));\r\n        return response.json();\r\n    }\r\n}\r\n\r\nexport default RestoDbSource;","const CONFIG = {\r\n  KEY: '12345',\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\r\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/medium/',\r\n  DEFAULT_LANGUAGE: 'en-us',\r\n  CACHE_NAME: 'WizzResto-1',\r\n  DATABASE_NAME: 'restaurantdb',\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'restaurants',\r\n};\r\n\r\nexport default CONFIG;","import 'regenerator-runtime'; /* for async await transpile */\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\nimport '../styles/main.css';\nimport '../styles/responsive.css';\nimport './views/component/nav-bar';\nimport './views/component/hero';\nimport App from './views/app';\nimport swRegister from './utils/sw-register';\n\nconst app = new App({\n    button: document.querySelector('#hamburgerButton'),\n    drawer: document.querySelector('#drawer'),\n    content: document.querySelector('#mainContent'),\n});\n\nwindow.addEventListener('hashchange', () => {\n    app.renderPage();\n});\n\nwindow.addEventListener('load', () => {\n    app.renderPage();\n    swRegister();\n});"],"names":["i","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","getAllRestaurants","getAll","putRestaurant","restaurant","hasOwnProperty","put","deleteRestaurant","searchRestaurants","query","filter","jammedRestaurantName","name","toLowerCase","replace","jammedQuery","indexOf","LIST","REVIEW","DETAIL","fetch","API_ENDPOINT","response","json","data","method","headers","body","responseJson","KEY","BASE_URL","BASE_IMAGE_URL","DEFAULT_LANGUAGE","CACHE_NAME","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}